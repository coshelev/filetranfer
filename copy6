from flask import Flask, request
import whisper
from pydub import AudioSegment
from whisper.utils import get_writer
import requests
import os

app = Flask(__name__)

@app.route('/')
def index():
    return 'Web App with Python Flask!'

@app.route('/whisper', methods=['POST'])
def json_example():
    
    inputHeaders        = request.headers
    filenameWithoutExt  = inputHeaders.get('filenameWithoutExt')
    filenameWAV = inputHeaders.get('filenameWAV')

    print(filenameWAV)

    binary_data = request.data
    
    file = open(filenameWAV, 'wb')
	   
    try:
        file.write(binary_data)
    finally:
        file.close()

    
    model = whisper.load_model("large-v3")
    #model = whisper.load_model("base")
    result = model.transcribe(filenameWAV)
    transcription = result["text"]
    print(transcription)    

    # Save as a TSV file
    #-------------------
    #output_directory = "./"
    #tsv_writer = get_writer("tsv", output_directory)
    #tsv_writer(result, filenameWAV)

    #txtfileName = filenameWithoutExt+".tsv"
    #txtfile = open(txtfileName, 'r')
    #file_content = txtfile.read()

    #filecontent = flask.jsonify({"transcription": transcription})
	
    #audio = AudioSegment.from_wav(filenameWAV)
    #channels = audio.split_to_mono()    
    #left_channel = channels[0]
    #filenameLeftWAV = filenameWithoutExt+"_1.WAV"
    #left_channel.export(filenameLeftWAV, format="wav")
    #model = whisper.load_model("large-v3")
    #result = model.transcribe(filenameWAV)
    #print(result["text"])
    #tsv_writer(result, filenameLeftWAV)


    # Delete the file
    #===================	
    #try:
    #    os.remove(txtfileName)
    #    print(f"File '{txtfileName}' deleted successfully.")
    #except FileNotFoundError:
    #    print(f"File '{txtfileName}' not found.")
    #except PermissionError:
    #    print(f"Permission denied to delete '{txtfileName}'.")
    #except Exception as e:
    #    print(f"An error occurred: {e}")

    post_url = 'http://mainappl.main.luidorauto.ru/sys_agr/hs/webhooks/anypost/v1'
    headers = {'Content-Type': 'application/json'}

    signature   = inputHeaders.get('signature')
   
    payload =  '{"type":"transcription","signature":'+'"'+signature+'", "linkedid":'+'"'+filenameWithoutExt+'","transcription":'+ '"'+ transcription+'"}'
    payload1 = payload.encode('utf-8')
    print(payload1)
    response = requests.post(post_url, headers=headers, data=payload1)

    return 'JSON Object Example'

app.run(host='0.0.0.0', port=8080, debug=True)
